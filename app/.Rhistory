mainPanel(
leafletOutput("map")
)
)
)
server <- function(input, output) {
output$map <- renderLeaflet({
# Filter data by selected year
data_year <- major_disaster_data %>%
filter(Year == input$yearSlider) %>%
group_by(state) %>%
count(incidentType, sort = TRUE) %>%
slice(1) # take the most frequent incidentType
# Create color palette
pal <- colorFactor(viridis(24), domain = unique(major_disaster_data$incidentType))
print(head(data_year))
# Base map
leaflet(data = data_year) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = state_boundaries_wgs84, # This should be a spatial object with US state boundaries
fillColor = ~pal(incidentType),
fillOpacity = 0.7,
weight = 1,
label = ~paste("State:", state, "<br>",
"Incident:", incidentType, "<br>",
"Count:", n),
color = "#BDBDC3",
highlight = highlightOptions(weight = 2,
color = "#666",
fillOpacity = 0.7,
bringToFront = TRUE)) %>%
addLegend(pal = pal, values = ~incidentType,
title = "Incident Types",
opacity = 0.7,
position = "bottomright")
})
}
shinyApp(ui, server)
output$map <- renderLeaflet({
# Filter data by selected year
data_year <- major_disaster_data %>%
filter(Year == input$yearSlider) %>%
group_by(state) %>%
count(incidentType, sort = TRUE) %>%
slice(1) # take the most frequent incidentType
# Create color palette
pal <- colorFactor(viridis(24), domain = unique(major_disaster_data$incidentType))
print(head(data_year))
data_year <- major_disaster_data %>%
filter(Year == input$yearSlider) %>%
group_by(state) %>%
count(incidentType, sort = TRUE) %>%
slice(1) # take the most frequent incidentType
major_disaster_data$state
?USA_state_boundaries_map
ui <- fluidPage(
titlePanel("Most Frequent Incident Type Analysis by State"),
sidebarLayout(
sidebarPanel(
sliderInput("yearSlider", "Select Year:",
min = min(major_disaster_data$Year),
max = max(major_disaster_data$Year),
value = min(major_disaster_data$Year),
step = 1,
round = TRUE)
),
mainPanel(
leafletOutput("map")
)
)
)
server <- function(input, output) {
output$map <- renderLeaflet({
# Filter data by selected year
data_year <- major_disaster_data %>%
filter(Year == input$yearSlider) %>%
group_by(state) %>%
count(incidentType, sort = TRUE) %>%
slice(1) # take the most frequent incidentType
# Create color palette
pal <- colorFactor(viridis(24), domain = unique(major_disaster_data$incidentType))
print(head(data_year))
# Base map
leaflet(data = data_year) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = USA_state_boundaries_map, # This should be a spatial object with US state boundaries
fillColor = ~pal(incidentType),
fillOpacity = 0.7,
weight = 1,
label = ~paste("State:", state, "<br>",
"Incident:", incidentType, "<br>",
"Count:", n),
color = "#BDBDC3",
highlight = highlightOptions(weight = 2,
color = "#666",
fillOpacity = 0.7,
bringToFront = TRUE)) %>%
addLegend(pal = pal, values = ~incidentType,
title = "Incident Types",
opacity = 0.7,
position = "bottomright")
})
}
shinyApp(ui, server)
install.packages("tigris")
install.packages("tigris")
library(tigris)
?tigris
?usa.state.boundaries
?USA_state_boundaries_map
library(USA.state.boundaries.data)
?USA.state.boundaries.data
knitr::opts_chunk$set(fig.width=12, fig.height=8, fig.path='figs/',
echo=T, warning=FALSE, message=FALSE)
library(USA.state.boundaries.data)
ui <- fluidPage(
titlePanel("Most Frequent Incident Type Analysis by State"),
sidebarLayout(
sidebarPanel(
sliderInput("yearSlider", "Select Year:",
min = min(major_disaster_data$Year),
max = max(major_disaster_data$Year),
value = min(major_disaster_data$Year),
step = 1,
round = TRUE)
),
mainPanel(
leafletOutput("map")
)
)
)
if (!require("DT")) install.packages('DT')
if (!require("dtplyr")) install.packages('dtplyr')
if (!require("lubridate")) install.packages('lubridate')
if (!require("ggmap")) install.packages('ggmap')
if (!require("choroplethrZip")) {
# install.packages("devtools")
library(devtools)
install_github('arilamstein/choroplethrZip@v1.5.0')}
library(dtplyr)
library(dplyr)
library(DT)
library(lubridate)
library(ggplot2)
library(shiny)
library(USA.state.boundaries.data)
library(leaflet)
library(viridis)
url <- "/Users/jasoncho/Documents/GitHub/ads-fall2023-project2-group6/data/MajorDisaster_data.csv"
major_disaster_data <- read.csv("/Users/mannyb/Documents/GitHub/ads-fall2023-project2-group6/data/MajorDisaster_data.csv")
#head(major_disaster_data)
unique(major_disaster_data$incidentType)
# declarationDate -> Date format
major_disaster_data$declarationDate <- as.Date(major_disaster_data$declarationDate, format="%Y-%m-%d")
# Extracting Year and Month
major_disaster_data$Year <- as.numeric(format(major_disaster_data$declarationDate, "%Y"))
major_disaster_data$Month <- as.numeric(format(major_disaster_data$declarationDate, "%m"))
ui <- fluidPage(
titlePanel("Most Frequent Incident Type Analysis by State"),
sidebarLayout(
sidebarPanel(
sliderInput("yearSlider", "Select Year:",
min = min(major_disaster_data$Year),
max = max(major_disaster_data$Year),
value = min(major_disaster_data$Year),
step = 1,
round = TRUE)
),
mainPanel(
leafletOutput("map")
)
)
)
server <- function(input, output) {
output$map <- renderLeaflet({
# Filter data by selected year
data_year <- major_disaster_data %>%
filter(Year == input$yearSlider) %>%
group_by(state) %>%
count(incidentType, sort = TRUE) %>%
slice(1) # take the most frequent incidentType
# Create color palette
pal <- colorFactor(viridis(24), domain = unique(major_disaster_data$incidentType))
# Base map
leaflet(data = data_year) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = statesp010_map, # This should be a spatial object with US state boundaries
fillColor = ~pal(incidentType),
fillOpacity = 0.7,
weight = 1,
label = ~paste("State:", state, "<br>",
"Incident:", incidentType, "<br>",
"Count:", n),
color = "#BDBDC3",
highlight = highlightOptions(weight = 2,
color = "#666",
fillOpacity = 0.7,
bringToFront = TRUE)) %>%
addLegend(pal = pal, values = ~incidentType,
title = "Incident Types",
opacity = 0.7,
position = "bottomright")
})
}
shinyApp(ui, server)
stateShapes <- usa_sf("high")
?usa_sf
stateShapes <- USA_state_boundaries_map("high")
if (!require("DT")) install.packages('DT')
if (!require("dtplyr")) install.packages('dtplyr')
if (!require("lubridate")) install.packages('lubridate')
if (!require("ggmap")) install.packages('ggmap')
if (!require("choroplethrZip")) {
# install.packages("devtools")
library(devtools)
install_github('arilamstein/choroplethrZip@v1.5.0')}
library(dtplyr)
library(dplyr)
library(DT)
library(lubridate)
library(ggplot2)
library(shiny)
library(USA.state.boundaries)
if (!require("DT")) install.packages('DT')
if (!require("dtplyr")) install.packages('dtplyr')
if (!require("lubridate")) install.packages('lubridate')
if (!require("ggmap")) install.packages('ggmap')
if (!require("choroplethrZip")) {
# install.packages("devtools")
library(devtools)
install_github('arilamstein/choroplethrZip@v1.5.0')}
library(dtplyr)
library(dplyr)
library(DT)
library(lubridate)
library(ggplot2)
library(shiny)
library(USA.state.boundaries.data)
library(leaflet)
library(viridis)
?USA_state_boundaries_map
stateShapes <- USA_state_boundaries_map("high")
install.packages("USA.state.boundaries")
if (!require("DT")) install.packages('DT')
if (!require("dtplyr")) install.packages('dtplyr')
if (!require("lubridate")) install.packages('lubridate')
if (!require("ggmap")) install.packages('ggmap')
if (!require("choroplethrZip")) {
# install.packages("devtools")
library(devtools)
install_github('arilamstein/choroplethrZip@v1.5.0')}
library(dtplyr)
library(dplyr)
library(DT)
library(lubridate)
library(ggplot2)
library(shiny)
library(USA.state.boundaries)
library(leaflet)
library(viridis)
stateShapes <- usa_sf("high")
?USA.state.boundaries
?state_boundaries_wgs84
stateShapes <- state_boundaries_wgs84("high")
stateShapes <- state_boundaries_wgs84
ui <- fluidPage(
titlePanel("Most Frequent Incident Type Analysis by State"),
sidebarLayout(
sidebarPanel(
sliderInput("yearSlider", "Select Year:",
min = min(major_disaster_data$Year),
max = max(major_disaster_data$Year),
value = min(major_disaster_data$Year),
step = 1,
round = TRUE)
),
mainPanel(
leafletOutput("map")
)
)
)
server <- function(input, output) {
output$map <- renderLeaflet({
# Filter data by selected year
data_year <- major_disaster_data %>%
filter(Year == input$yearSlider) %>%
group_by(state) %>%
count(incidentType, sort = TRUE) %>%
slice(1) # take the most frequent incidentType
# Create color palette
pal <- colorFactor(viridis(24), domain = unique(major_disaster_data$incidentType))
# Base map
leaflet(data = stateShapes) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = stateShapes,
fillColor = ~pal(data_year$incidentType[match(stateShapes$state, data_year$state)]),
fillOpacity = 0.7,
weight = 1,
label = ~paste("State:", stateShapes$state, "<br>",
"Incident:", data_year$incidentType[match(stateShapes$state, data_year$state)], "<br>",
"Count:", data_year$n[match(stateShapes$state, data_year$state)]),
color = "#BDBDC3",
highlight = highlightOptions(weight = 2,
color = "#666",
fillOpacity = 0.7,
bringToFront = TRUE)) %>%
addLegend(pal = pal, values = data_year$incidentType,
title = "Incident Types",
opacity = 0.7,
position = "bottomright")
})
}
shinyApp(ui, server)
stateShapes <- state_boundaries_wgs84
ui <- fluidPage(
titlePanel("Most Frequent Incident Type Analysis by State"),
sidebarLayout(
sidebarPanel(
sliderInput("yearSlider", "Select Year:",
min = min(major_disaster_data$Year),
max = max(major_disaster_data$Year),
value = min(major_disaster_data$Year),
step = 1,
round = TRUE)
),
mainPanel(
leafletOutput("map")
)
)
)
server <- function(input, output) {
output$map <- renderLeaflet({
# Filter data by selected year
data_year <- major_disaster_data %>%
filter(Year == input$yearSlider) %>%
group_by(state) %>%
count(incidentType, sort = TRUE) %>%
slice(1) # take the most frequent incidentType
# Create color palette
pal <- colorFactor(viridis(24), domain = unique(major_disaster_data$incidentType))
# Base map
leaflet(data = stateShapes) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = stateShapes,
fillColor = ~pal(data_year$incidentType[match(stateShapes$state, data_year$state)]),
fillOpacity = 0.7,
weight = 1,
label = ~paste("State:", stateShapes$state, "<br>",
"Incident:", data_year$incidentType[match(stateShapes$state, data_year$state)], "<br>",
"Count:", data_year$n[match(stateShapes$state, data_year$state)]),
color = "#BDBDC3",
highlight = highlightOptions(weight = 2,
color = "#666",
fillOpacity = 0.7,
bringToFront = TRUE)) %>%
addLegend(pal = pal, values = data_year$incidentType,
title = "Incident Types",
opacity = 0.7,
position = "bottomright")
})
}
shinyApp(ui, server)
stateShapes <- state_boundaries_wgs84
ui <- fluidPage(
titlePanel("Most Frequent Incident Type Analysis by State"),
sidebarLayout(
sidebarPanel(
sliderInput("yearSlider", "Select Year:",
min = min(major_disaster_data$Year),
max = max(major_disaster_data$Year),
value = min(major_disaster_data$Year),
step = 1,
round = TRUE)
),
mainPanel(
leafletOutput("map")
)
)
)
server <- function(input, output) {
output$map <- renderLeaflet({
# Filter data by selected year
data_year <- major_disaster_data %>%
filter(Year == input$yearSlider) %>%
group_by(state) %>%
count(incidentType, sort = TRUE) %>%
slice(1) # take the most frequent incidentType
# Create color palette
pal <- colorFactor(viridis(24), domain = unique(major_disaster_data$incidentType))
# Base map
leaflet(data = stateShapes) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = stateShapes,
fillColor = ~pal(data_year$incidentType[match(stateShapes$state, data_year$state)]),
fillOpacity = 0.7,
weight = 1,
label = ~paste("State:", stateShapes$state,
"Incident:", data_year$incidentType[match(stateShapes$state, data_year$state)],
"Count:", data_year$n[match(stateShapes$state, data_year$state)]),
color = "#BDBDC3",
highlight = highlightOptions(weight = 2,
color = "#666",
fillOpacity = 0.7,
bringToFront = TRUE)) %>%
addLegend(pal = pal, values = data_year$incidentType,
title = "Incident Types",
opacity = 0.7,
position = "bottomright")
})
}
shinyApp(ui, server)
stateShapes <- state_boundaries_wgs84
ui <- fluidPage(
titlePanel("Most Frequent Incident Type Analysis by State"),
sidebarLayout(
sidebarPanel(
sliderInput("yearSlider", "Select Year:",
min = min(major_disaster_data$Year),
max = max(major_disaster_data$Year),
value = min(major_disaster_data$Year),
step = 1,
round = TRUE)
),
mainPanel(
leafletOutput("map")
)
)
)
server <- function(input, output) {
output$map <- renderLeaflet({
# Filter data by selected year
data_year <- major_disaster_data %>%
filter(Year == input$yearSlider) %>%
group_by(state) %>%
count(incidentType, sort = TRUE) %>%
slice(1) # take the most frequent incidentType
# Create color palette
pal <- colorFactor(viridis(24), domain = unique(major_disaster_data$incidentType))
# Base map
leaflet(data = stateShapes) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(data = stateShapes,
fillColor = ~pal(data_year$incidentType[match(stateShapes$state, data_year$state)]),
fillOpacity = 0.7,
weight = 1,
label = ~paste("State:", stateShapes$state, "<br>",
"Incident:", data_year$incidentType[match(stateShapes$state, data_year$state)], "<br>",
"Count:", data_year$n[match(stateShapes$state, data_year$state)]),
color = "#BDBDC3",
highlight = highlightOptions(weight = 2,
color = "#666",
fillOpacity = 0.7,
bringToFront = TRUE)) %>%
addLegend(pal = pal, values = data_year$incidentType,
title = "Incident Types",
opacity = 0.7,
position = "bottomright")
})
}
shinyApp(ui, server)
update.packages(ask = FALSE)
stateShapes <- state_boundaries_wgs84
ui <- fluidPage(
titlePanel("Most Frequent Incident Type Analysis by State"),
sidebarLayout(
sidebarPanel(
sliderInput("yearSlider", "Select Year:",
min = min(major_disaster_data$Year),
max = max(major_disaster_data$Year),
value = min(major_disaster_data$Year),
step = 1,
round = TRUE)
),
mainPanel(
leafletOutput("map")
)
)
)
server <- function(input, output) {
output$map <- renderLeaflet({
# Filter data by selected year
data_year <- major_disaster_data %>%
filter(Year == input$yearSlider) %>%
group_by(state) %>%
count(incidentType, sort = TRUE) %>%
slice(1) # take the most frequent incidentType
# Create color palette
pal <- colorFactor(viridis(24), domain = unique(major_disaster_data$incidentType))
# Base map
leaflet(data = stateShapes) %>%
addProviderTiles("CartoDB.Positron") %>%
setView(lng = -98.583333, lat = 39.833333, zoom = 4) %>%
addPolygons(data = stateShapes,
fillColor = ~pal(data_year$incidentType[match(stateShapes$state, data_year$state)]),
fillOpacity = 0.7,
weight = 1,
label = ~paste("State:", stateShapes$state, "<br>",
"Incident:", data_year$incidentType[match(stateShapes$state, data_year$state)], "<br>",
"Count:", data_year$n[match(stateShapes$state, data_year$state)]),
color = "#BDBDC3",
highlight = highlightOptions(weight = 2,
color = "#666",
fillOpacity = 0.7,
bringToFront = TRUE)) %>%
addLegend(pal = pal, values = data_year$incidentType,
title = "Incident Types",
opacity = 0.7,
position = "bottomright")
})
}
shinyApp(ui, server)
conflicts(detail = TRUE)
